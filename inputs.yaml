# - inputs.yaml

# NODE2VEC INPUTS ------------------------------------------------------

dataset : 'test' # which dataset to learn? 'train', 'test' or 'valid'

# training hyperparameters
n_epochsN2V : 50 # number of epochs for node2vec
num_graphs : null # how many graphs to learn? set to null if all
batch_size : 128 # how many nodes to consider per batch
lrN2V : 0.01 # learning rate for node2vec

# parameters for random walk
walk_length : 20 # random walk length
context_size : 10 # from each walk, take samples of size context_size
walks_per_node : 20 # how many walks per node
num_negative_samples : 2 # num of negative samples per positive sample
p : 1
q : 1

save_features : True # do you want to save the features


# CLASSIFIER INPUTS ----------------------------------------------------

# choose dataset to train the classifier on
dataset : 'train'
# specify graph id to train on 
# graphs in dataset are indexed from 0 to n where n is number of graphs
# in dataset.
# set graph_id to null if want to train on all graphs one-by-one
graph_id : null 
# choose how to divide training data into train and test sets
test_split : 0.1 # if 0.1, 10% will be used as test data

# Training hyperparameters
n_epochs   : 100 # int: number of epochs
lr         : 0.01 # float: initial learning rate
device     : 'cuda' # str: which device to use 'cpu' or 'cuda:0'

# Scheduler options 
# The scheduler controls the learning rate during training, if it
# detects that the training loss is not changing for some period of time
# it will reduce the learning rate by some factor
factor    : 0.5 # float: learning rate multiplier
patience  : 5 # int: how many epochs to wait
threshold : 0.001 # float: if loss hasn't changed by more than this val.

# Seed for training, this option lets you control the seed from which to
# start the model each time, rather than letting the starting point be
# random each time, this can be used for testing the effect of different
# hyperparameters
use_seed : False # bool: option if we should use a seed or not
seed     : 0 # int: choose seed value

# Model choice, options:
# ['Linear', 'smallLinear', 'linRes', 'linResBN']
model : 'smallLinear' # str: model to use for training

# Loss function, options:
# ['BCELoss']
loss : 'BCELoss' # str: choose the loss function to use

# saving parameters
record_run : False # bool: do you want to record run to tensorboard?
save_model : False # bool: do you want to save model
dir_name   : 'models' # str: specify directory where to save models 
